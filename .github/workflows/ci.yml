name: Deploy blog

on:
  pull_request:
    paths: ['src/**', 'tests/**', 'theme/**']
  push:
    paths: ['src/**', 'spa/**', 'posts/**', 'tests/**', 'theme/**', 'VERSION', '.github/workflows/**']

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      id-token: write # This is required to allow the GitHub Action to authenticate with Deno Deploy.
      contents: read

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    - name: Cache nuget package
      uses: actions/cache@v1
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore nuget packages
      run: dotnet restore
    - name: Test
      run: dotnet test -c Release --no-restore
    - name: Build release
      run: dotnet build -c Release --no-restore
    - name: Publish release
      run: dotnet publish --project src/blog.csproj -c Release -o out --no-build
    - name: Generate blog files
      run: dotnet ./out/blog.dll --cwd ./

    - name: Deploy to Vercel Staging
      id: deploy-vercel-staging
      uses: amondnet/vercel-action@v20
      #preview on staging
      if: |
        github.event_name == 'push' &&
        github.ref == 'refs/heads/main' &&
        startsWith(github.event.head_commit.message, 'preview:')
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./dist
        scope: ${{ secrets.VERCEL_ORG_ID }}

    - name: Deploy to Vercel Production
      uses: amondnet/vercel-action@v20
      id: deploy-vercel-production
      #deploy to production
      if: |
        github.event_name == 'push' &&
        github.ref == 'refs/heads/main' &&
        startsWith(github.event.head_commit.message, 'release:')
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./dist
        scope: ${{ secrets.VERCEL_ORG_ID }}

    - name: Upload to Deno Deploy
      uses: denoland/deployctl@v1
      if: |
        github.event_name == 'push' &&
        github.ref == 'refs/heads/main' &&
        startsWith(github.event.head_commit.message, 'release:')
      with:
        project: tatwd
        entrypoint: https://deno.land/std@0.204.0/http/file_server.ts
        root: ./dist
